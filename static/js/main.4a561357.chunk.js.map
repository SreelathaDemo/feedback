{"version":3,"sources":["App.tsx","reportWebVitals.ts","index.tsx"],"names":["colors","useStyles","makeStyles","theme","createStyles","root","flexGrow","menuButton","marginRight","spacing","title","container","display","flexDirection","alignItems","stars","textarea","border","borderRadius","padding","margin","minHeight","width","button","App","useState","currentValue","setCurrentValue","undefined","hoverValue","setHoverValue","Array","fill","classes","handleMouseLeave","className","Form","Group","controlId","Label","Control","type","placeholder","Check","label","style","map","_","index","size","onClick","onMouseOver","onMouseLeave","color","cursor","as","rows","accept","capture","Button","variant","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mQAQMA,EACI,UADJA,EAEE,UAGFC,EAAYC,aAAW,SAACC,GAAD,OAC7BC,YAAa,CACXC,KAAM,CACJC,SAAU,GAEZC,WAAY,CACVC,YAAaL,EAAMM,QAAQ,IAE7BC,MAAO,CACLJ,SAAU,GAGbK,UAAW,CACNC,QAAS,OACTC,cAAe,SACfC,WAAY,UAEdC,MAAO,CACLH,QAAS,OACTC,cAAe,OAEjBG,SAAU,CACRC,OAAQ,oBACRC,aAAc,EACdC,QAAS,GACTC,OAAQ,SACRC,UAAW,IACXC,MAAO,KAETC,OAAQ,CACNN,OAAQ,oBACRC,aAAc,EACdI,MAAO,IACPH,QAAS,SA2FAK,MAhFf,WACE,MAAwCC,mBAAS,GAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KACA,EAAoCF,wBAASG,GAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACMf,EAAQgB,MAAM,GAAGC,KAAK,GACtBC,EAAUhC,IAWViC,EAAmB,WACvBJ,OAAcF,IAEhB,OACE,sBAAKO,UAAU,MAAf,UACA,oBAAIA,UAAU,QAAd,gCAA6C,uBAEjD,qBAAKA,UAAU,OAAf,SACA,eAACC,EAAA,EAAD,WACE,eAACA,EAAA,EAAKC,MAAN,CAAYC,UAAU,iBAAtB,UACE,cAACF,EAAA,EAAKG,MAAN,CAAYJ,UAAU,aAAtB,kBACA,cAACC,EAAA,EAAKI,QAAN,CAAcC,KAAK,OAAOC,YAAY,kBAE3B,uBACb,cAACN,EAAA,EAAKG,MAAN,CAAYJ,UAAU,aAAtB,sBACA,eAACC,EAAA,EAAKC,MAAN,CAAYC,UAAU,oBAAtB,UAEE,cAACF,EAAA,EAAKO,MAAN,CAAYF,KAAK,WAAWG,MAAM,OAAMC,MAAO,CAACjC,QAAQ,YACxD,cAACwB,EAAA,EAAKO,MAAN,CAAYF,KAAK,WAAWG,MAAM,YACvB,uBACb,cAACR,EAAA,EAAKG,MAAN,CAAYJ,UAAU,aAAtB,oBACA,qBAAKA,UAAWF,EAAQlB,MAAxB,SACOA,EAAM+B,KAAI,SAACC,EAAGC,GACb,OACE,cAAC,IAAD,CAEEC,KAAM,GACNC,QAAS,WAlCnBvB,EAkCqCqB,EAAQ,IACnCG,YAAa,WA/BvBrB,EA+B6CkB,EAAQ,IAC3CI,aAAclB,EACdmB,OAAQxB,GAAcH,GAAgBsB,EAAQhD,EAAgBA,EAC9D6C,MAAO,CACLrC,YAAa,GACb8C,OAAQ,YARLN,QAcb,uBACJ,eAACZ,EAAA,EAAKC,MAAN,CAAYC,UAAU,+BAAtB,UACE,cAACF,EAAA,EAAKG,MAAN,CAAYJ,UAAU,aAAtB,sBACA,cAACC,EAAA,EAAKI,QAAN,CAAce,GAAG,WAAWC,KAAM,OACvB,uBACb,eAACpB,EAAA,EAAKC,MAAN,CAAYC,UAAU,iBAAtB,UACE,cAACF,EAAA,EAAKG,MAAN,CAAYJ,UAAU,aAAtB,mBACA,cAACC,EAAA,EAAKI,QAAN,CAAcC,KAAK,OAAOgB,OAAO,UAAUC,SAAO,OAOpD,cAACC,EAAA,EAAD,CAAQC,QAAQ,UAAUnB,KAAK,SAA/B,6BC/GaoB,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.4a561357.chunk.js","sourcesContent":["import { useState } from \"react\";\nimport './App.css';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport { FaStar } from \"react-icons/fa\";\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\n\n\nconst colors = {\n  orange: \"#FFBA5A\",\n  grey: \"#a9a9a9\"\n  \n};\nconst useStyles = makeStyles((theme: Theme) =>\ncreateStyles({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n\n container: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\"\n    },\n    stars: {\n      display: \"flex\",\n      flexDirection: \"row\",\n    },\n    textarea: {\n      border: \"1px solid #a9a9a9\",\n      borderRadius: 5,\n      padding: 10,\n      margin: \"20px 0\",\n      minHeight: 100,\n      width: 300\n    },\n    button: {\n      border: \"1px solid #a9a9a9\",\n      borderRadius: 5,\n      width: 300,\n      padding: 10,\n    }\n  \n\n}),\n);\n\n\n\n\n\nfunction App() {\n  const [currentValue, setCurrentValue] = useState(0);\n  const [hoverValue, setHoverValue] = useState(undefined);\n  const stars = Array(5).fill(0);\n  const classes = useStyles();\n\n\n  const handleClick = (value:any) => {\n    setCurrentValue(value)\n  }\n\n  const handleMouseOver = (newHoverValue:any) => {\n    setHoverValue(newHoverValue)\n  };\n\n  const handleMouseLeave = () => {\n    setHoverValue(undefined)\n  }\n  return (\n    <div className=\"App\">\n    <h1 className='title'>Customer  Feedback</h1><br />\n\n<div className=\"form\">\n<Form>\n  <Form.Group controlId=\"formBasicEmail\">\n    <Form.Label className='labelTitle'>Name</Form.Label>\n    <Form.Control type=\"text\" placeholder=\"Enter Name\" />\n    \n  </Form.Group><br />\n  <Form.Label className='labelTitle'>Products</Form.Label>\n  <Form.Group controlId=\"formBasicCheckbox\" >\n \n    <Form.Check type=\"checkbox\" label=\"Meat\"style={{display:'inline'}} />\n    <Form.Check type=\"checkbox\" label=\"Milk\" />\n  </Form.Group><br/>\n  <Form.Label className='labelTitle'>Rating</Form.Label>\n  <div className={classes.stars}>\n        {stars.map((_, index) => {\n          return (\n            <FaStar\n              key={index}\n              size={24}\n              onClick={() => handleClick(index + 1)}\n              onMouseOver={() => handleMouseOver(index + 1)}\n              onMouseLeave={handleMouseLeave}\n              color={(hoverValue || currentValue) > index ? colors.orange : colors.grey}\n              style={{\n                marginRight: 10,\n                cursor: \"pointer\"\n              }}\n            />\n          )\n        })}\n      </div>\n      <br />\n  <Form.Group controlId=\"exampleForm.ControlTextarea1\">\n    <Form.Label className='labelTitle'>Feedback</Form.Label>\n    <Form.Control as=\"textarea\" rows={3} />\n  </Form.Group><br />\n  <Form.Group controlId=\"formBasicEmail\">\n    <Form.Label className='labelTitle'>Image</Form.Label>\n    <Form.Control type=\"file\" accept=\"image/*\" capture  />\n    \n\n    \n  </Form.Group>\n\n\n  <Button variant=\"primary\" type=\"submit\">\n    Submit\n  </Button> \n</Form>\n</div>\n    \n    </div>\n  );\n}\n\n\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}